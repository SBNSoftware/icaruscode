#include "services_common_icarus.fcl"
#include "channelmapping_icarus.fcl"
#include "rootoutput_icarus.fcl"
#include "decoderdefs_icarus.fcl"

process_name: DecodeTrg

services: {
  
                     @table::icarus_art_services
  message:           @local::icarus_message_services_interactive_debug
  
                     @table::icarus_geometry_services
  DetectorClocksService: @local::icarus_detectorclocks
  IICARUSChannelMap: @local::icarus_channelmappinggservice  # from channelmapping_icarus.fcl
}


physics: {
  
  producers: {
    
//     pmtconfig:  @local::extractPMTconfig
    triggerconfig: @local::extractTriggerConfig
    
    daqTrigger: @local::decodeTriggerAutodetect
    
//     daqPMT:     @local::decodePMT
    
  }
  
//   decoding: [ PMTconfig, triggerconfig, daqTrigger, daqPMT ]
  decoding: [ triggerconfig, daqTrigger ]
  streams: [ rootoutput ]
}

outputs: {
  rootoutput: {
                      @table::icarus_rootoutput
    dataTier:        "decoded"
    fileProperties:   { maxInputFiles: 1 }
    checkFileName:    false
    compressionLevel: 501
    
    outputCommands:  [ "drop *_*_*_*", "keep *_*_*_DecodeTrg" ]
  } # rootoutput
} # outputs 


physics.producers.daqTrigger.DecoderTool.TrigConfigLabel: triggerconfig
physics.producers.daqTrigger.DecoderTool.Decoders[0].ToolConfig.DiagnosticOutput: true
physics.producers.daqTrigger.DecoderTool.Decoders[0].ToolConfig.Debug:            true
physics.producers.daqTrigger.DecoderTool.Decoders[1].ToolConfig.DiagnosticOutput: true
physics.producers.daqTrigger.DecoderTool.Decoders[1].ToolConfig.Debug:            true
physics.producers.daqTrigger.DecoderTool.Decoders[2].ToolConfig.DiagnosticOutput: true
physics.producers.daqTrigger.DecoderTool.Decoders[2].ToolConfig.Debug:            true
