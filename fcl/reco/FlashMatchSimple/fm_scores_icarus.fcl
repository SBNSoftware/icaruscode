#include "services_common_icarus.fcl"
#include "simulationservices_icarus.fcl"
#include "messages_icarus.fcl"
#include "rootoutput_icarus.fcl"

#include "flashmatch_simple_icarus.fcl"

process_name: FlashMatch

services:{
  TFileService: { fileName: "flashmatch_icarus.root" }
  @table::icarus_basic_services
  message:                     @local::icarus_message_services
  BackTrackerService:          @local::standard_backtrackerservice
  ParticleInventoryService:    @local::standard_particleinventoryservice  
}

source:{
  module_type:     RootInput
}

physics: {
  producers: {
    fmatchCryoE: @local::icarus_simple_flashmatch_E
    fmatchCryoW: @local::icarus_simple_flashmatch_W
    fmatchopCryoE: @local::icarus_simple_flashmatch_E_op
    fmatchopCryoW: @local::icarus_simple_flashmatch_W_op
  }

  reco: [fmatchCryoE, fmatchCryoW, fmatchopCryoE, fmatchopCryoW]
  stream: [out]
  end_paths: [stream]
}

outputs: {
  out: {
    @table::icarus_rootoutput # inherit shared settings
    module_type: RootOutput
    fileName: "flashmatch_icarus.root"
    dataTier:    "reconstructed"
    compressionLevel: 0
    outputCommands: [ ]
  }
}
