BEGIN_PROLOG #comment to run generate_simple_weighted_template.py

icarus_simple_flashmatch_E: {
  module_type: FlashPredict
  IsSimple: true
  FlashType: "simpleflash_pmt"
  UseOldMetrics: false		// Use metrics file with just simpleflash_pmt metrics
  Cryostat: 0
  PandoraProducer:     "pandoraGausCryoE"
  TrackProducer:       "pandoraTrackGausCryoE"
  #CaloProducer:       "pandoraGausCaloCryoE"
  SpacePointProducer:  "pandoraGausCryoE"
  OpHitProducer: "ophit"
  OpFlashProducer: ["opflashCryoE"]
  OpFlashHitProducer: ["opflashCryoE"]
  Verbose: false
  BeamSpillTimeStart:      -1.7  # us, with some tolerance # TODO: workaround to accomodate MC and Data different times
  BeamSpillTimeEnd:         1.7  # us, with some tolerance # TODO: workaround to accomodate MC and Data different times
  FlashFindingTimeStart: -100.   # us # TODO: tune
  FlashFindingTimeEnd:    100.   # us # TODO: tune
  FlashStart:              -0.02 # us, wrt flash time
  FlashEnd:                 0.08 # us, wrt flash time
  PlaneList: [0, 1, 3] 	# Choose which wireplanes to get hits from: 0, 1, 3 = U, V, Z
  OnlyCollectionWires: false
  ForceConcurrence: true
  CorrectDriftDistance: true
  InputFileName: "FlashMatch/fm_all_metrics_icarus.root"
  NoAvailableMetrics: false
  SelectNeutrino: true # it's too buggy to set 'false'
  MakeTree: false
  StoreMCInfo: false
  # TODO: tune below
  MinHitQ: 0.
  MinSpacePointQ: 0.
  MinParticleQ: 0.
  MinSliceQ: 0.
  OpHitTime: "StartTime" # TODO: test and change to RiseTime once it is tested
  MinInTimeFlashes: 3
  MaxFlashes: 10
  MinOpHPE: 0.
  MinFlashPE: 10.
  FlashPEFraction: 0.9
  ChargeToNPhotonsShower: 1.0
  ChargeToNPhotonsTrack: 1.0
  # TODO: tune above
  
  ThresholdTerm: 200.

  PDMapAlg: {
    tool_type: PDMapAlgSimple
  }

  DriftDistance: 149.115 # only used for metrics creation
  XBins: 30
  # XBinWidth approx 5.
  #
  # TODO: Metrics should depend on X,Y,Z.
  #       The limiting factor to the number of bins is having enough
  #       nu only stats.  The binning has to be done such that no two
  #       PMTs fall under the same bin. Could potentially use
  #       irregular binning?
  # TODO: below needs to be tested
  x_bins_: 10
  x_low:    0.
  x_up:   149.115
  y_bins:   5
  y_low: -184.5
  y_up:   135.5
  z_bins:  18
  z_low: -905.
  z_up:   905.
  
  # block for Y and Z ophit distributions, used for unbiassing
  fit_func_y:    "pol2"
  YBins:       5
  YLow:      -155.45
  YHigh:      108.55
  fit_func_z:    "pol2"
  ZBins:      18
  ZLow:     -897.84
  ZHigh:     897.84
  SkewLimitY:  5.
  SkewLimitZ:  5.

  # binning for template and metrics generation
  score: {
    bins:     60
    low:       0.
    up:       30. }
  dy: {
    bins:     60
    low:    -150.
    up:      150. }
  dz: {
    bins:     60
    low:    -150.
    up:      150. }
  rr: {
    bins:     40
    low:       0.
    up:      300. }
  ratio: {
    bins:     40
    low:       0.
    up:        0.7}
  slope: {
    bins:     40     # TODO
    low:       0.    # TODO
    up:        1. }  # TODO
  petoq: {
    bins:     40  
    low:       0. 
    up:        1.4}  
  # rr_TF1_fit: "pol3" # LEGACY, not used in the normal operation but helpful for diagnostics
  # ratio_TF1_fit: "pol3" # LEGACY, not used in the normal operation but helpful for diagnostics
}

icarus_simple_flashmatch_W: @local::icarus_simple_flashmatch_E
icarus_simple_flashmatch_W.Cryostat: 1
icarus_simple_flashmatch_W.PandoraProducer:    "pandoraGausCryoW"
icarus_simple_flashmatch_W.TrackProducer:      "pandoraTrackGausCryoW"
# icarus_simple_flashmatch_W.CaloProducer:     "pandoraGausCaloCryoW"
icarus_simple_flashmatch_W.SpacePointProducer: "pandoraGausCryoW"
icarus_simple_flashmatch_W.OpFlashProducer: ["opflashCryoW"]
icarus_simple_flashmatch_W.OpFlashHitProducer: ["opflashCryoW"]

# OpFlashes
icarus_simple_flashmatch_E_op: @local::icarus_simple_flashmatch_E
icarus_simple_flashmatch_E_op.IsSimple: false
icarus_simple_flashmatch_E_op.FlashType: "opflash_pmt"

icarus_simple_flashmatch_W_op: @local::icarus_simple_flashmatch_W
icarus_simple_flashmatch_W_op.IsSimple: false
icarus_simple_flashmatch_W_op.FlashType: "opflash_pmt"

# SCE definitions
icarus_simple_flashmatch_sce_E: @local::icarus_simple_flashmatch_E
icarus_simple_flashmatch_sce_E.PandoraProducer:    "pandoraGausSCECryoE"
icarus_simple_flashmatch_sce_E.TrackProducer:      "pandoraTrackGausSCECryoE"
# icarus_simple_flashmatch_sce_E.CaloProducer:     "pandoraGausSCECaloCryoE"
icarus_simple_flashmatch_sce_E.SpacePointProducer: "pandoraGausSCECryoE"

icarus_simple_flashmatch_sce_W: @local::icarus_simple_flashmatch_W
icarus_simple_flashmatch_sce_W.PandoraProducer:    "pandoraGausSCECryoW"
icarus_simple_flashmatch_sce_W.TrackProducer:      "pandoraTrackGausSCECryoW"
# icarus_simple_flashmatch_sce_W.CaloProducer:     "pandoraGausSCECaloCryoW"
icarus_simple_flashmatch_sce_W.SpacePointProducer: "pandoraGausSCECryoW"

# OpFlashes
icarus_simple_flashmatch_sce_E_op: @local::icarus_simple_flashmatch_E_op
icarus_simple_flashmatch_sce_E_op.IsSimple: false
icarus_simple_flashmatch_sce_E_op.FlashType: "opflash_pmt"

icarus_simple_flashmatch_sce_W_op: @local::icarus_simple_flashmatch_W_op
icarus_simple_flashmatch_sce_W_op.IsSimple: false
icarus_simple_flashmatch_sce_W_op.FlashType: "opflash_pmt"

END_PROLOG #comment to run generate_simple_weighted_template.py
