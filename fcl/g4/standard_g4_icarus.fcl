#
# Purpose: Processes generated Monte Carlo events through GEANT4 detector simulation
# 
# 
# Input
# ------
# 
# * all `simb::MCTruth` collection data products are used as input
# 
# 
# Output
# -------
# 
# * `largeant` ("legacy" `LArG4` module):
#     * `simb::MCParticle` collection: all initial, intermediate and final
#       particles propagated through the detector (exceptions apply)
#     * `sim::SimEnergyDeposit` collections: `TPCActive` and `Others`
#     * `sim::SimChannel` collection: ionisation drifted to TPC channels
#     * `sim::SimPhoton` collection: scintillation photons converting into PMT
#     * `sim::AuxDetSimChannel` collection: hits from auxiliary detectors (CRT)
# * `ionization` (`sim::SimEnergyDeposit` collection)
#


# ------------------------------------------------------------------------------
#include "services_icarus_simulation.fcl"
#include "largeantmodules_icarus.fcl"
#include "rootoutput_icarus.fcl"
#include "g4inforeducer.fcl"
#include "mcreco.fcl"


# ------------------------------------------------------------------------------
process_name: G4


# ------------------------------------------------------------------------------
services: @local::icarus_g4_services
services.Geometry.GDML: "icarus_complete_20220518_overburden.gdml"
services.Geometry.ROOT: "icarus_complete_20220518_overburden.gdml"

# ------------------------------------------------------------------------------
physics:
{

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  producers:
  {
    largeant:   @local::icarus_largeant
    ionization: {
                  module_type: "larsim/ElectronDrift/ShiftEdepSCE"
                  EDepTag:     "largeant:TPCActive"
                  MakeAnaTree: false
                }
    sedlite:    @local::sbn_largeant_info_reducer # needs to run right after largeant
         
    # Saving MC information needed for the ML effort
    mcreco:     @local::standard_mcreco

    rns:        { module_type: "RandomNumberSaver" }
  }


  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  simulate: [ rns, largeant, ionization, sedlite, mcreco ]
  stream:   [ rootoutput ]


  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  
} # physics

# Store MCParticleLite in G4 to store dropped particles from KeepEMShowerDaughters: false
physics.producers.largeant.StoreDroppedMCParticles: true

# ------------------------------------------------------------------------------

# Configure mcreco to read SEDLite instead of SED and MCParticleLite in addition to MCParticle
physics.producers.mcreco.SimChannelLabel: "sedlite"
physics.producers.mcreco.MCParticleLabel: "largeant"
physics.producers.mcreco.MCParticleLiteLabel: "largeant"
physics.producers.mcreco.UseSimEnergyDeposit: false
physics.producers.mcreco.MCRecoPart.SavePathPDGList: [13,-13,211,-211,111,311,310,130,321,-321,2212,2112,2224,2214,2114,1114,3122,1000010020,1000010030,1000020030,1000020040]
physics.producers.mcreco.UseSimEnergyDepositLite: true
physics.producers.mcreco.IncludeDroppedParticles: false

outputs.rootoutput: @local::icarus_rootoutput


# ------------------------------------------------------------------------------

services.message.destinations :
{
  STDCOUT:
  {
     type:      "cout"      #tells the message service to output this destination to cout
     threshold: "WARNING"   #tells the message service that this destination applies to WARNING and higher level messages
     categories:
     {
      ## Turning off the spewing of warnings coming from these two modules
       SimDriftElectrons:
       {
         limit: 0
         reportEvery: 0
       }
       McReco:
       {
         limit: 0
         reportEvery: 0
       }
       default:
       {
         limit: 5  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 1
       }
     }
  }
}
