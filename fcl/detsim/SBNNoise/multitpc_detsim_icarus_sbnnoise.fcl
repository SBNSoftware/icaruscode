#include "services_icarus_simulation.fcl"
#include "detsimmodules_ICARUS.fcl"
#include "opdetsim_pmt_icarus.fcl"
#include "crtsimmodules_icarus.fcl"

process_name: DetSim

services:
{
  #FileCatalogMetadata:  @local::art_file_catalog_mc
  @table::icarus_detsim_services
}

#source is now a root file
source:
{
  module_type: RootInput
  saveMemoryObjectThreshold: 0
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   crtdaq:         @local::icarus_crtsim
   #opdaq:          @local::icarus_simpmt
   opdaq:          @local::icarus_simpmt_nonoise #turn off the noise so it runs more quickly
   daq0:           @local::icarus_simwire
   daq1:           @local::icarus_simwire
   daq2:           @local::icarus_simwire
   daq3:           @local::icarus_simwire
   rns:            { module_type: "RandomNumberSaver" }
 }
 
 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ rns, opdaq, daq0, daq1, daq2, daq3, crtdaq ]
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [ simulate ] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#
# For MCC1.1 we are still suppressing channels with no signal in the TPC
physics.producers.daq0.SuppressNoSignal: true
physics.producers.daq0.Cryostat:         0
physics.producers.daq0.TPC:              0
physics.producers.daq1.SuppressNoSignal: true
physics.producers.daq1.Cryostat:         0
physics.producers.daq1.TPC:              1
physics.producers.daq2.SuppressNoSignal: true
physics.producers.daq2.Cryostat:         1
physics.producers.daq2.TPC:              0
physics.producers.daq3.SuppressNoSignal: true
physics.producers.daq3.Cryostat:         1
physics.producers.daq3.TPC:              1

physics.producers.daq0.NoiseGenToolVec:    [@local::SBNNoiseTool, @local::SBNNoiseTool, @local::SBNNoiseTool]
physics.producers.daq1.NoiseGenToolVec:    [@local::SBNNoiseTool, @local::SBNNoiseTool, @local::SBNNoiseTool]
physics.producers.daq2.NoiseGenToolVec:    [@local::SBNNoiseTool, @local::SBNNoiseTool, @local::SBNNoiseTool]
physics.producers.daq3.NoiseGenToolVec:    [@local::SBNNoiseTool, @local::SBNNoiseTool, @local::SBNNoiseTool]

physics.producers.daq0.NoiseGenToolVec[0].Plane:             0
physics.producers.daq0.NoiseGenToolVec[0].NoiseHistFileName: "FFTww01m.root"
physics.producers.daq0.NoiseGenToolVec[1].Plane:             1
physics.producers.daq0.NoiseGenToolVec[1].NoiseHistFileName: "FFTwe10.root"
physics.producers.daq0.NoiseGenToolVec[2].Plane:             2
physics.producers.daq0.NoiseGenToolVec[2].NoiseHistFileName: "FFTwe10.root"
physics.producers.daq1.NoiseGenToolVec[0].Plane:             0
physics.producers.daq1.NoiseGenToolVec[0].NoiseHistFileName: "FFTww01m.root"
physics.producers.daq1.NoiseGenToolVec[1].Plane:             1
physics.producers.daq1.NoiseGenToolVec[1].NoiseHistFileName: "FFTwe10.root"
physics.producers.daq1.NoiseGenToolVec[2].Plane:             2
physics.producers.daq1.NoiseGenToolVec[2].NoiseHistFileName: "FFTwe10.root"
physics.producers.daq2.NoiseGenToolVec[0].Plane:             0
physics.producers.daq2.NoiseGenToolVec[0].NoiseHistFileName: "FFTww01m.root"
physics.producers.daq2.NoiseGenToolVec[1].Plane:             1
physics.producers.daq2.NoiseGenToolVec[1].NoiseHistFileName: "FFTwe10.root"
physics.producers.daq2.NoiseGenToolVec[2].Plane:             2
physics.producers.daq2.NoiseGenToolVec[2].NoiseHistFileName: "FFTwe10.root"
physics.producers.daq3.NoiseGenToolVec[0].Plane:             0
physics.producers.daq3.NoiseGenToolVec[0].NoiseHistFileName: "FFTww01m.root"
physics.producers.daq3.NoiseGenToolVec[1].Plane:             1
physics.producers.daq3.NoiseGenToolVec[1].NoiseHistFileName: "FFTwe10.root"
physics.producers.daq3.NoiseGenToolVec[2].Plane:             2
physics.producers.daq3.NoiseGenToolVec[2].NoiseHistFileName: "FFTwe10.root"

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%tc-%p.root"
   dataTier:    "detector-simulated"
   saveMemoryObjectThreshold: 0
   compressionLevel: 1
   fastCloning: false
 }
}

#legacy G4 configs
services.Geometry.GDML: "icarus_complete_20220518_overburden.gdml"
services.Geometry.ROOT: "icarus_complete_20220518_overburden.gdml"
physics.producers.crtdaq.G4ModuleLabel: "largeant"
physics.producers.opdaq.InputModule: "largeant"
