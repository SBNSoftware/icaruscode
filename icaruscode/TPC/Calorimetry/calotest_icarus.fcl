#include "services_icarus_simulation.fcl"
#include "rootoutput_icarus.fcl"
#include "calorimetry_icarus.fcl"
#include "calorimetryICARUS.fcl"

process_name: CaloTest

services: {
    @table::icarus_simulation_basic_services
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
    producers:
    {
        gnocchiCal: @local::standard_gnocchicaloicarus
    }

    #define the producer and filter modules for this path, order matters,
    #filters reject all following items.  see lines starting physics.producers below
    reco: [ gnocchiCal]

    #define the output stream, there could be more than one if using filters
    stream1:  [ rootoutput ]

}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs.rootoutput: @local::icarus_rootoutput

physics.producers.gnocchiCal.TrackModuleLabel:      "pandoraTrackGausCryoE"
physics.producers.gnocchiCal.CaloAlg.CalAreaConstants: [ 1.56e-2, 1.35e-2, 1.59e-2 ]
