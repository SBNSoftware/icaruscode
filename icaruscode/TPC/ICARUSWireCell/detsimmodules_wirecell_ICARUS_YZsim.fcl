// We need this for Detector Properties
#include "services_basic_icarus.fcl"
// We need this for diffusion
#include "simulationservices_icarus.fcl"

BEGIN_PROLOG

icarus_simwire_wirecell: 
{
    module_type : WireCellToolkit
    wcls_main: 
    {
        tool_type: WCLS
        apps: ["Pgrapher"]
        //logsinks: ["stdout"]
        //loglevels: ["magnify:debug"]
        plugins: ["WireCellPgraph", "WireCellGen","WireCellSio","WireCellRoot","WireCellLarsoft"]
        // needs to be found via your WIRECELL_PATH 
        configs: ["pgrapher/experiment/icarus/wcls-multitpc-sim-drift-simchannel-yzsim-refactored.jsonnet"]
        // Contract note: these exact "type:name" must be used to identify
        // the configuration data structures for these components in the Jsonnet.
        inputers: ["wclsSimDepoSetSource:electron"]
        outputers: 
        [
            //"wclsDepoSetSimChannelSink:postdriftold",
            //"wclsDepoFluxWriter:postdrift",
            //"wclsDepoFluxWriter:postdrift359",
            "wclsDepoFluxWriter:postdrift0",
            "wclsDepoFluxWriter:postdrift1",
            "wclsDepoFluxWriter:postdrift2",
            "wclsDepoFluxWriter:postdrift3",
            "wclsDepoFluxWriter:postdrift4",
            "wclsDepoFluxWriter:postdrift5",
            "wclsDepoFluxWriter:postdrift6",
            "wclsDepoFluxWriter:postdrift7",
            "wclsDepoFluxWriter:postdrift8",
            "wclsDepoFluxWriter:postdrift9",
            "wclsDepoFluxWriter:postdrift10",
            "wclsDepoFluxWriter:postdrift11",
            "wclsDepoFluxWriter:postdrift12",
            "wclsDepoFluxWriter:postdrift13",
            "wclsDepoFluxWriter:postdrift14",
            "wclsDepoFluxWriter:postdrift15",
            "wclsDepoFluxWriter:postdrift16",
            "wclsDepoFluxWriter:postdrift17",
            "wclsDepoFluxWriter:postdrift18",
            "wclsDepoFluxWriter:postdrift19",
            "wclsDepoFluxWriter:postdrift20",
            "wclsDepoFluxWriter:postdrift21",
            "wclsDepoFluxWriter:postdrift22",
            "wclsDepoFluxWriter:postdrift23",
            "wclsDepoFluxWriter:postdrift24",
            "wclsDepoFluxWriter:postdrift25",
            "wclsDepoFluxWriter:postdrift26",
            "wclsDepoFluxWriter:postdrift27",
            "wclsDepoFluxWriter:postdrift28",
            "wclsDepoFluxWriter:postdrift29",
            "wclsDepoFluxWriter:postdrift30",
            "wclsDepoFluxWriter:postdrift31",
            "wclsDepoFluxWriter:postdrift32",
            "wclsDepoFluxWriter:postdrift33",
            "wclsDepoFluxWriter:postdrift34",
            "wclsDepoFluxWriter:postdrift35",
            "wclsDepoFluxWriter:postdrift36",
            "wclsDepoFluxWriter:postdrift37",
            "wclsDepoFluxWriter:postdrift38",
            "wclsDepoFluxWriter:postdrift39",
            "wclsDepoFluxWriter:postdrift40",
            "wclsDepoFluxWriter:postdrift41",
            "wclsDepoFluxWriter:postdrift42",
            "wclsDepoFluxWriter:postdrift43",
            "wclsDepoFluxWriter:postdrift44",
            "wclsDepoFluxWriter:postdrift45",
            "wclsDepoFluxWriter:postdrift46",
            "wclsDepoFluxWriter:postdrift47",
            "wclsDepoFluxWriter:postdrift48",
            "wclsDepoFluxWriter:postdrift49",
            "wclsDepoFluxWriter:postdrift50",
            "wclsDepoFluxWriter:postdrift51",
            "wclsDepoFluxWriter:postdrift52",
            "wclsDepoFluxWriter:postdrift53",
            "wclsDepoFluxWriter:postdrift54",
            "wclsDepoFluxWriter:postdrift55",
            "wclsDepoFluxWriter:postdrift56",
            "wclsDepoFluxWriter:postdrift57",
            "wclsDepoFluxWriter:postdrift58",
            "wclsDepoFluxWriter:postdrift59",
            "wclsDepoFluxWriter:postdrift60",
            "wclsDepoFluxWriter:postdrift61",
            "wclsDepoFluxWriter:postdrift62",
            "wclsDepoFluxWriter:postdrift63",
            "wclsDepoFluxWriter:postdrift64",
            "wclsDepoFluxWriter:postdrift65",
            "wclsDepoFluxWriter:postdrift66",
            "wclsDepoFluxWriter:postdrift67",
            "wclsDepoFluxWriter:postdrift68",
            "wclsDepoFluxWriter:postdrift69",
            "wclsDepoFluxWriter:postdrift70",
            "wclsDepoFluxWriter:postdrift71",
            "wclsDepoFluxWriter:postdrift72",
            "wclsDepoFluxWriter:postdrift73",
            "wclsDepoFluxWriter:postdrift74",
            "wclsDepoFluxWriter:postdrift75",
            "wclsDepoFluxWriter:postdrift76",
            "wclsDepoFluxWriter:postdrift77",
            "wclsDepoFluxWriter:postdrift78",
            "wclsDepoFluxWriter:postdrift79",
            "wclsDepoFluxWriter:postdrift80",
            "wclsDepoFluxWriter:postdrift81",
            "wclsDepoFluxWriter:postdrift82",
            "wclsDepoFluxWriter:postdrift83",
            "wclsDepoFluxWriter:postdrift84",
            "wclsDepoFluxWriter:postdrift85",
            "wclsDepoFluxWriter:postdrift86",
            "wclsDepoFluxWriter:postdrift87",
            "wclsDepoFluxWriter:postdrift88",
            "wclsDepoFluxWriter:postdrift89",
            "wclsDepoFluxWriter:postdrift90",
            "wclsDepoFluxWriter:postdrift91",
            "wclsDepoFluxWriter:postdrift92",
            "wclsDepoFluxWriter:postdrift93",
            "wclsDepoFluxWriter:postdrift94",
            "wclsDepoFluxWriter:postdrift95",
            "wclsDepoFluxWriter:postdrift96",
            "wclsDepoFluxWriter:postdrift97",
            "wclsDepoFluxWriter:postdrift98",
            "wclsDepoFluxWriter:postdrift99",
            "wclsDepoFluxWriter:postdrift100",
            "wclsDepoFluxWriter:postdrift101",
            "wclsDepoFluxWriter:postdrift102",
            "wclsDepoFluxWriter:postdrift103",
            "wclsDepoFluxWriter:postdrift104",
            "wclsDepoFluxWriter:postdrift105",
            "wclsDepoFluxWriter:postdrift106",
            "wclsDepoFluxWriter:postdrift107",
            "wclsDepoFluxWriter:postdrift108",
            "wclsDepoFluxWriter:postdrift109",
            "wclsDepoFluxWriter:postdrift110",
            "wclsDepoFluxWriter:postdrift111",
            "wclsDepoFluxWriter:postdrift112",
            "wclsDepoFluxWriter:postdrift113",
            "wclsDepoFluxWriter:postdrift114",
            "wclsDepoFluxWriter:postdrift115",
            "wclsDepoFluxWriter:postdrift116",
            "wclsDepoFluxWriter:postdrift117",
            "wclsDepoFluxWriter:postdrift118",
            "wclsDepoFluxWriter:postdrift119",
            "wclsDepoFluxWriter:postdrift120",
            "wclsDepoFluxWriter:postdrift121",
            "wclsDepoFluxWriter:postdrift122",
            "wclsDepoFluxWriter:postdrift123",
            "wclsDepoFluxWriter:postdrift124",
            "wclsDepoFluxWriter:postdrift125",
            "wclsDepoFluxWriter:postdrift126",
            "wclsDepoFluxWriter:postdrift127",
            "wclsDepoFluxWriter:postdrift128",
            "wclsDepoFluxWriter:postdrift129",
            "wclsDepoFluxWriter:postdrift130",
            "wclsDepoFluxWriter:postdrift131",
            "wclsDepoFluxWriter:postdrift132",
            "wclsDepoFluxWriter:postdrift133",
            "wclsDepoFluxWriter:postdrift134",
            "wclsDepoFluxWriter:postdrift135",
            "wclsDepoFluxWriter:postdrift136",
            "wclsDepoFluxWriter:postdrift137",
            "wclsDepoFluxWriter:postdrift138",
            "wclsDepoFluxWriter:postdrift139",
            "wclsDepoFluxWriter:postdrift140",
            "wclsDepoFluxWriter:postdrift141",
            "wclsDepoFluxWriter:postdrift142",
            "wclsDepoFluxWriter:postdrift143",
            "wclsDepoFluxWriter:postdrift144",
            "wclsDepoFluxWriter:postdrift145",
            "wclsDepoFluxWriter:postdrift146",
            "wclsDepoFluxWriter:postdrift147",
            "wclsDepoFluxWriter:postdrift148",
            "wclsDepoFluxWriter:postdrift149",
            "wclsDepoFluxWriter:postdrift150",
            "wclsDepoFluxWriter:postdrift151",
            "wclsDepoFluxWriter:postdrift152",
            "wclsDepoFluxWriter:postdrift153",
            "wclsDepoFluxWriter:postdrift154",
            "wclsDepoFluxWriter:postdrift155",
            "wclsDepoFluxWriter:postdrift156",
            "wclsDepoFluxWriter:postdrift157",
            "wclsDepoFluxWriter:postdrift158",
            "wclsDepoFluxWriter:postdrift159",
            "wclsDepoFluxWriter:postdrift160",
            "wclsDepoFluxWriter:postdrift161",
            "wclsDepoFluxWriter:postdrift162",
            "wclsDepoFluxWriter:postdrift163",
            "wclsDepoFluxWriter:postdrift164",
            "wclsDepoFluxWriter:postdrift165",
            "wclsDepoFluxWriter:postdrift166",
            "wclsDepoFluxWriter:postdrift167",
            "wclsDepoFluxWriter:postdrift168",
            "wclsDepoFluxWriter:postdrift169",
            "wclsDepoFluxWriter:postdrift170",
            "wclsDepoFluxWriter:postdrift171",
            "wclsDepoFluxWriter:postdrift172",
            "wclsDepoFluxWriter:postdrift173",
            "wclsDepoFluxWriter:postdrift174",
            "wclsDepoFluxWriter:postdrift175",
            "wclsDepoFluxWriter:postdrift176",
            "wclsDepoFluxWriter:postdrift177",
            "wclsDepoFluxWriter:postdrift178",
            "wclsDepoFluxWriter:postdrift179",
            "wclsDepoFluxWriter:postdrift180",
            "wclsDepoFluxWriter:postdrift181",
            "wclsDepoFluxWriter:postdrift182",
            "wclsDepoFluxWriter:postdrift183",
            "wclsDepoFluxWriter:postdrift184",
            "wclsDepoFluxWriter:postdrift185",
            "wclsDepoFluxWriter:postdrift186",
            "wclsDepoFluxWriter:postdrift187",
            "wclsDepoFluxWriter:postdrift188",
            "wclsDepoFluxWriter:postdrift189",
            "wclsDepoFluxWriter:postdrift190",
            "wclsDepoFluxWriter:postdrift191",
            "wclsDepoFluxWriter:postdrift192",
            "wclsDepoFluxWriter:postdrift193",
            "wclsDepoFluxWriter:postdrift194",
            "wclsDepoFluxWriter:postdrift195",
            "wclsDepoFluxWriter:postdrift196",
            "wclsDepoFluxWriter:postdrift197",
            "wclsDepoFluxWriter:postdrift198",
            "wclsDepoFluxWriter:postdrift199",
            "wclsDepoFluxWriter:postdrift200",
            "wclsDepoFluxWriter:postdrift201",
            "wclsDepoFluxWriter:postdrift202",
            "wclsDepoFluxWriter:postdrift203",
            "wclsDepoFluxWriter:postdrift204",
            "wclsDepoFluxWriter:postdrift205",
            "wclsDepoFluxWriter:postdrift206",
            "wclsDepoFluxWriter:postdrift207",
            "wclsDepoFluxWriter:postdrift208",
            "wclsDepoFluxWriter:postdrift209",
            "wclsDepoFluxWriter:postdrift210",
            "wclsDepoFluxWriter:postdrift211",
            "wclsDepoFluxWriter:postdrift212",
            "wclsDepoFluxWriter:postdrift213",
            "wclsDepoFluxWriter:postdrift214",
            "wclsDepoFluxWriter:postdrift215",
            "wclsDepoFluxWriter:postdrift216",
            "wclsDepoFluxWriter:postdrift217",
            "wclsDepoFluxWriter:postdrift218",
            "wclsDepoFluxWriter:postdrift219",
            "wclsDepoFluxWriter:postdrift220",
            "wclsDepoFluxWriter:postdrift221",
            "wclsDepoFluxWriter:postdrift222",
            "wclsDepoFluxWriter:postdrift223",
            "wclsDepoFluxWriter:postdrift224",
            "wclsDepoFluxWriter:postdrift225",
            "wclsDepoFluxWriter:postdrift226",
            "wclsDepoFluxWriter:postdrift227",
            "wclsDepoFluxWriter:postdrift228",
            "wclsDepoFluxWriter:postdrift229",
            "wclsDepoFluxWriter:postdrift230",
            "wclsDepoFluxWriter:postdrift231",
            "wclsDepoFluxWriter:postdrift232",
            "wclsDepoFluxWriter:postdrift233",
            "wclsDepoFluxWriter:postdrift234",
            "wclsDepoFluxWriter:postdrift235",
            "wclsDepoFluxWriter:postdrift236",
            "wclsDepoFluxWriter:postdrift237",
            "wclsDepoFluxWriter:postdrift238",
            "wclsDepoFluxWriter:postdrift239",
            "wclsDepoFluxWriter:postdrift240",
            "wclsDepoFluxWriter:postdrift241",
            "wclsDepoFluxWriter:postdrift242",
            "wclsDepoFluxWriter:postdrift243",
            "wclsDepoFluxWriter:postdrift244",
            "wclsDepoFluxWriter:postdrift245",
            "wclsDepoFluxWriter:postdrift246",
            "wclsDepoFluxWriter:postdrift247",
            "wclsDepoFluxWriter:postdrift248",
            "wclsDepoFluxWriter:postdrift249",
            "wclsDepoFluxWriter:postdrift250",
            "wclsDepoFluxWriter:postdrift251",
            "wclsDepoFluxWriter:postdrift252",
            "wclsDepoFluxWriter:postdrift253",
            "wclsDepoFluxWriter:postdrift254",
            "wclsDepoFluxWriter:postdrift255",
            "wclsDepoFluxWriter:postdrift256",
            "wclsDepoFluxWriter:postdrift257",
            "wclsDepoFluxWriter:postdrift258",
            "wclsDepoFluxWriter:postdrift259",
            "wclsDepoFluxWriter:postdrift260",
            "wclsDepoFluxWriter:postdrift261",
            "wclsDepoFluxWriter:postdrift262",
            "wclsDepoFluxWriter:postdrift263",
            "wclsDepoFluxWriter:postdrift264",
            "wclsDepoFluxWriter:postdrift265",
            "wclsDepoFluxWriter:postdrift266",
            "wclsDepoFluxWriter:postdrift267",
            "wclsDepoFluxWriter:postdrift268",
            "wclsDepoFluxWriter:postdrift269",
            "wclsDepoFluxWriter:postdrift270",
            "wclsDepoFluxWriter:postdrift271",
            "wclsDepoFluxWriter:postdrift272",
            "wclsDepoFluxWriter:postdrift273",
            "wclsDepoFluxWriter:postdrift274",
            "wclsDepoFluxWriter:postdrift275",
            "wclsDepoFluxWriter:postdrift276",
            "wclsDepoFluxWriter:postdrift277",
            "wclsDepoFluxWriter:postdrift278",
            "wclsDepoFluxWriter:postdrift279",
            "wclsDepoFluxWriter:postdrift280",
            "wclsDepoFluxWriter:postdrift281",
            "wclsDepoFluxWriter:postdrift282",
            "wclsDepoFluxWriter:postdrift283",
            "wclsDepoFluxWriter:postdrift284",
            "wclsDepoFluxWriter:postdrift285",
            "wclsDepoFluxWriter:postdrift286",
            "wclsDepoFluxWriter:postdrift287",
            "wclsDepoFluxWriter:postdrift288",
            "wclsDepoFluxWriter:postdrift289",
            "wclsDepoFluxWriter:postdrift290",
            "wclsDepoFluxWriter:postdrift291",
            "wclsDepoFluxWriter:postdrift292",
            "wclsDepoFluxWriter:postdrift293",
            "wclsDepoFluxWriter:postdrift294",
            "wclsDepoFluxWriter:postdrift295",
            "wclsDepoFluxWriter:postdrift296",
            "wclsDepoFluxWriter:postdrift297",
            "wclsDepoFluxWriter:postdrift298",
            "wclsDepoFluxWriter:postdrift299",
            "wclsDepoFluxWriter:postdrift300",
            "wclsDepoFluxWriter:postdrift301",
            "wclsDepoFluxWriter:postdrift302",
            "wclsDepoFluxWriter:postdrift303",
            "wclsDepoFluxWriter:postdrift304",
            "wclsDepoFluxWriter:postdrift305",
            "wclsDepoFluxWriter:postdrift306",
            "wclsDepoFluxWriter:postdrift307",
            "wclsDepoFluxWriter:postdrift308",
            "wclsDepoFluxWriter:postdrift309",
            "wclsDepoFluxWriter:postdrift310",
            "wclsDepoFluxWriter:postdrift311",
            "wclsDepoFluxWriter:postdrift312",
            "wclsDepoFluxWriter:postdrift313",
            "wclsDepoFluxWriter:postdrift314",
            "wclsDepoFluxWriter:postdrift315",
            "wclsDepoFluxWriter:postdrift316",
            "wclsDepoFluxWriter:postdrift317",
            "wclsDepoFluxWriter:postdrift318",
            "wclsDepoFluxWriter:postdrift319",
            "wclsDepoFluxWriter:postdrift320",
            "wclsDepoFluxWriter:postdrift321",
            "wclsDepoFluxWriter:postdrift322",
            "wclsDepoFluxWriter:postdrift323",
            "wclsDepoFluxWriter:postdrift324",
            "wclsDepoFluxWriter:postdrift325",
            "wclsDepoFluxWriter:postdrift326",
            "wclsDepoFluxWriter:postdrift327",
            "wclsDepoFluxWriter:postdrift328",
            "wclsDepoFluxWriter:postdrift329",
            "wclsDepoFluxWriter:postdrift330",
            "wclsDepoFluxWriter:postdrift331",
            "wclsDepoFluxWriter:postdrift332",
            "wclsDepoFluxWriter:postdrift333",
            "wclsDepoFluxWriter:postdrift334",
            "wclsDepoFluxWriter:postdrift335",
            "wclsDepoFluxWriter:postdrift336",
            "wclsDepoFluxWriter:postdrift337",
            "wclsDepoFluxWriter:postdrift338",
            "wclsDepoFluxWriter:postdrift339",
            "wclsDepoFluxWriter:postdrift340",
            "wclsDepoFluxWriter:postdrift341",
            "wclsDepoFluxWriter:postdrift342",
            "wclsDepoFluxWriter:postdrift343",
            "wclsDepoFluxWriter:postdrift344",
            "wclsDepoFluxWriter:postdrift345",
            "wclsDepoFluxWriter:postdrift346",
            "wclsDepoFluxWriter:postdrift347",
            "wclsDepoFluxWriter:postdrift348",
            "wclsDepoFluxWriter:postdrift349",
            "wclsDepoFluxWriter:postdrift350",
            "wclsDepoFluxWriter:postdrift351",
            "wclsDepoFluxWriter:postdrift352",
            "wclsDepoFluxWriter:postdrift353",
            "wclsDepoFluxWriter:postdrift354",
            "wclsDepoFluxWriter:postdrift355",
            "wclsDepoFluxWriter:postdrift356",
            "wclsDepoFluxWriter:postdrift357",
            "wclsDepoFluxWriter:postdrift358",
            "wclsDepoFluxWriter:postdrift359",
            "wclsFrameSaver:simdigits0",
            "wclsFrameSaver:simdigits1",
            "wclsFrameSaver:simdigits2",
            "wclsFrameSaver:simdigits3"
            //   ,"wclsFrameSaver:nfdigits",
            //   "wclsFrameSaver:spsignals",
            //   "wclsFrameSaver:spthresholds"
        ]
        // Make available parameters via Jsonnet's std.extVar()
        params: {
        // Changing this to match Gray's latest data drive field responses
	    //files_fields: "garfield-icarus-fnal-rev2.json.bz2"
            //files_fields: "icarus_fnal_fit_ks_P0nom.json.bz2"
            files_fields: '"icarus_final_fit_dqdx0.json.bz2",
                           "icarus_final_fit_dqdx1.json.bz2",
                           "icarus_final_fit_dqdx2.json.bz2",
                           "icarus_final_fit_dqdx3.json.bz2",
                           "icarus_final_fit_dqdx4.json.bz2",
                           "icarus_final_fit_dqdx5.json.bz2",
                           "icarus_final_fit_dqdx6.json.bz2",
                           "icarus_final_fit_dqdx7.json.bz2",
                           "icarus_final_fit_dqdx8.json.bz2",
                           "icarus_final_fit_dqdx9.json.bz2",
                           "icarus_final_fit_dqdx10.json.bz2",
                           "icarus_final_fit_dqdx11.json.bz2",
                           "icarus_final_fit_dqdx12.json.bz2",
                           "icarus_final_fit_dqdx13.json.bz2",
                           "icarus_final_fit_dqdx14.json.bz2"'
	    file_rcresp: "" # use the RCResponse by default
            cathode_input_format: "scalar" # scalar or array
	    }
        structs: {
            # load values from simulationservices_icarus.fcl
            # Longitudinal diffusion constant [cm2/ns]
            DL: @local::icarus_largeantparameters.LongitudinalDiffusion
            # Transverse diffusion constant [cm2/ns]
            DT: @local::icarus_largeantparameters.TransverseDiffusion
            # load values from services_common_icarus.fcl
            # Electron lifetime [microseconds]
            lifetime: @local::icarus_detproperties.Electronlifetime

            lifetime_TPCEE: @local::icarus_detproperties.Electronlifetime
            lifetime_TPCEW: @local::icarus_detproperties.Electronlifetime
            lifetime_TPCWE: @local::icarus_detproperties.Electronlifetime
            lifetime_TPCWW: @local::icarus_detproperties.Electronlifetime

            # Electron drift speed, assumes a certain applied E-field [mm/us]
            # driftSpeed: 1.5756
            # Scaling Parameters from int and coh noise components
	        int_noise_scale: 1.0
	        coh_noise_scale: 1.0

            # Gain and shaping time
            //gain0: 14.9654 # mV/fC 
            //gain1: 14.9654 # mV/fC 
            //gain2: 14.9654 # mV/fC 
            gain0: 17.05212   # mV/fC 
            gain1: 12.6181926 # mV/fC 
            gain2: 13.0261362 # mV/fC 

            shaping0: 1.3 # us
            shaping1: 1.3 # us
            shaping2: 1.3 # us

            # Time offsets for truth matching
            time_offset_u: 0.0 # us
            time_offset_v: 0.0 # us
            time_offset_y: 0.0 # us
           
        }
    }
}

# TUNED FR CONFIG
icarus_simwire_wirecell_fitSR: @local::icarus_simwire_wirecell
# Add in the ER tail
icarus_simwire_wirecell_fitSR.wcls_main.params.file_rcresp: "icarus_fnal_rc_tail.json"
# Add in the tuned field responses
icarus_simwire_wirecell_fitSR.wcls_main.params.files_fields: "icarus_fnal_fit_ks_P0nom.json.bz2"
# futz with shaping+gain values (note these are really just scale factors and should not be taken literally)
icarus_simwire_wirecell_fitSR.wcls_main.structs.gain0: 11.9918701 # mV/fC 
icarus_simwire_wirecell_fitSR.wcls_main.structs.gain1: 12.6181926 # mV/fC
icarus_simwire_wirecell_fitSR.wcls_main.structs.gain2: 13.0261362 # mV/fC
icarus_simwire_wirecell_fitSR.wcls_main.structs.shaping1: 1.45 # us

# TUNED FR CONFIG w/ Front Induction Nominal
icarus_simwire_wirecell_fitSR_P0nom: @local::icarus_simwire_wirecell
# Add in the ER tail
icarus_simwire_wirecell_fitSR_P0nom.wcls_main.params.file_rcresp: "icarus_fnal_rc_tail.json"
# Add in the tuned field responses (except for P0)
icarus_simwire_wirecell_fitSR_P0nom.wcls_main.params.files_fields: "icarus_fnal_fit_ks_P0nom.json.bz2"
# futz with shaping+gain values (note these are really just scale factors and should not be taken literally)
icarus_simwire_wirecell_fitSR_P0nom.wcls_main.structs.gain0: 17.05212 # mV/fC 
icarus_simwire_wirecell_fitSR_P0nom.wcls_main.structs.gain1: 12.6181926 # mV/fC
icarus_simwire_wirecell_fitSR_P0nom.wcls_main.structs.gain2: 13.0261362 # mV/fC
icarus_simwire_wirecell_fitSR_P0nom.wcls_main.structs.shaping1: 1.45 # us
END_PROLOG
