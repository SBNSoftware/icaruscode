#include "nugraph.fcl"
#include "services_common_icarus.fcl"
#include "services_icarus_simulation.fcl"

# in order to setup the triton server locally, please do:
# > mrbslp
# > setup_nugraph-v0.sh
# then after the job you can kill the server process with:
# > killall -9 /cvmfs/oasis.opensciencegrid.org/mis/apptainer/1.3.2/x86_64/libexec/apptainer/libexec/starter

process_name: testinference

services:
{
  TFileService:          { fileName: "reco_hist.root" }
  TimeTracker:           {}
  MemoryTracker:         {}
  RandomNumberGenerator: {}
  @table::icarus_geometry_services
  @table::icarus_common_services
  @table::icarus_backtracking_services 
  message:               @local::icarus_message_services_prod_debug
  ParticleInventoryService: { 
        ParticleInventory: {
        EveIdCalculator: "EmEveIdCalculator"
        G4ModuleLabel: "largeant"
	OverrideRealData: true
     }
  }
}

source:
{
  module_type: RootInput
  maxEvents:   -1
}

outputs:
{
 rootOutput:
 {
   module_type: RootOutput
   dataTier: "reconstructed"
   compressionLevel: 1
   saveMemoryObjectThreshold: 0
   fileName: "%ifb_%tc-%p.root"
   fileProperties: {maxInputFiles: 1}
   checkFileName: false
   SelectEvents: []
   outputCommands: [
         "keep *_*_*_*"
         #"drop *_*_*_*",
         #"keep *_*_*_testinference"
     ]
 }
}

physics:
{

  producers:
  {
    nuslhitsCryoE: { 
      module_type: "IcarusNuSliceHitsProducer"
      #module_type: "IcarusTrueNuSliceHitsProducer"
      BaryMatchLabel: "tpcpmtbarycentermatchCryoE"
      SliceLabel:    "pandoraGausCryoE"
      SpsLabel:      "cluster3DCryoE"
    }
    nuslhitsCryoW: { 
      module_type: "IcarusNuSliceHitsProducer"
      #module_type: "IcarusTrueNuSliceHitsProducer"
      BaryMatchLabel: "tpcpmtbarycentermatchCryoW"
      SliceLabel:    "pandoraGausCryoW"
      SpsLabel:      "cluster3DCryoW"
    }
    nuslhits: {
      module_type:             "HitMerger"
      HitProducerLabelVec:     ["nuslhitsCryoE","nuslhitsCryoW"]
    }
    NuGraphCryoE: @local::ApptainerNuGraphNuSonicTriton
    NuGraphCryoW: @local::ApptainerNuGraphNuSonicTriton
  }
  analyzers:
  {
    NuGraphAnaCryoE: { 
      module_type: "NuGraphAnalyzer"
      NuGraphLabel: "NuGraphCryoE"
    }
    NuGraphAnaCryoW: { 
      module_type: "NuGraphAnalyzer"
      NuGraphLabel: "NuGraphCryoW"
    }
  }

 reco: [nuslhitsCryoE, nuslhitsCryoW, NuGraphCryoE, NuGraphCryoW]
 #reco: [ nuslhitsCryoE, NuGraphCryoE]
 trigger_paths:       [ reco ]

 ana: [NuGraphAnaCryoE,NuGraphAnaCryoW]
 #ana: [NuGraphAnaCryoE]
 streamROOT:         [ rootOutput ]
 end_paths:          [ ana, streamROOT ]
}

physics.producers.NuGraphCryoE.LoaderTool.tool_type: "IcarusNuGraphLoader"
physics.producers.NuGraphCryoE.LoaderTool.hitInput: "nuslhitsCryoE"
physics.producers.NuGraphCryoE.LoaderTool.spsInput: "nuslhitsCryoE"
physics.producers.NuGraphCryoE.DecoderTools.SemanticDecoderTool.hitInput: "nuslhitsCryoE"
physics.producers.NuGraphCryoE.TritonConfig.modelName: "nugraph2_icarus_mpvmprbnb"
#physics.producers.NuGraphCryoE.debug: true

physics.producers.NuGraphCryoW.LoaderTool.tool_type: "IcarusNuGraphLoader"
physics.producers.NuGraphCryoW.LoaderTool.hitInput: "nuslhitsCryoW"
physics.producers.NuGraphCryoW.LoaderTool.spsInput: "nuslhitsCryoW"
physics.producers.NuGraphCryoW.DecoderTools.SemanticDecoderTool.hitInput: "nuslhitsCryoW"
physics.producers.NuGraphCryoW.TritonConfig.modelName: "nugraph2_icarus_mpvmprbnb"
#physics.producers.NuGraphCryoW.debug: true

services.BackTrackerService.BackTracker.G4ModuleLabel: "largeant"
services.BackTrackerService.BackTracker.SimChannelModuleLabel: "daq:simpleSC"
